import asyncio
import json
import os
import random
import time
from datetime import datetime
from typing import Type, Union
from loguru import logger
from sqlalchemy import select, update
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker
from Bilibili_methods.all_methods import methods
from CONFIG import CONFIG
from grpc获取动态.Utils.GrpcDynamicRespUtils import DynTool, ObjDynInfo
from utl.代理.grpc_api import BiliGrpc
from grpc获取动态.src.获取取关对象.db.models import UserInfo, SpaceDyn

grpcapi = BiliGrpc()



class GetRmFollowingListV1:
    def __init__(self, ):
        self.sqliteLock=None
        self.logger = logger.bind(user=__name__, filter=lambda record: record["extra"].get('user') == __name__)
        self.lucky_up_list = []
        self.max_recorded_dyn_num = 300  # 每个uid最多记录多少个动态
        SQLITE_URI = CONFIG.database.followingup_db_RUI
        engine = create_async_engine(
            SQLITE_URI,
            echo=False,  # 是否打印sql日志
            future=True
        )
        self.AsyncSession = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False,
                                         autoflush=True)  # 每次操作的时候将session实例化一下
        self.check_up_sep_days = 7  # 最多隔7天检查一遍是否发了新动态
        self.BAPI = methods()
        self.max_separat_time = 86400 * 60  # 标记多少天未发动态的up主
        self.now_check_up: list = []

    # region 空间动态crud
    async def create_space_dyn(self, dyn_obj: ObjDynInfo) -> int:
        """
        添加空间动态
        :param dyn_obj:
        :return: 返回是否是抽奖动态
        """
        is_lot_dyn = self.BAPI.choujiangxinxipanduan(dyn_obj.dynCard.dynamicContent)
        while 1:
            try:
                async with self.sqliteLock:
                    async with self.AsyncSession() as session:
                        async with session.begin():
                            space_dyn = SpaceDyn(
                                Space_Dyn_uid=dyn_obj.uid,
                                dynamic_id=dyn_obj.dynamicId,
                                dynamic_content=dyn_obj.dynCard.dynamicContent,
                                uname=dyn_obj.uname,
                                dynamic_type=dyn_obj.dynCard.dynType,
                                is_lot_dyn=1 if is_lot_dyn is None else 0,
                                pubts=dyn_obj.dynCard.pubTs,
                                like=dyn_obj.dynCard.dynStat.like,
                                reply=dyn_obj.dynCard.dynStat.reply,
                                repost=dyn_obj.dynCard.dynStat.repost,
                            )
                            session.add(space_dyn)
                            await session.flush()
                            session.expunge(space_dyn)
                            break
            except Exception as e:
                self.logger.critical(f'Exception while creating space dyn!\n{e}')
                await asyncio.sleep(random.choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))
        return 1 if is_lot_dyn is None else 0

    # endregion
    # region up主信息crud
    async def create_user_info(self, uid):
        """
        添加新的uid
        :param uid:
        :return:
        """
        while 1:
            try:
                async with self.sqliteLock:
                    async with self.AsyncSession() as session:
                        async with session.begin():
                            data = UserInfo(
                                uid=uid,
                                upTimeStamp=datetime.fromtimestamp(0)
                            )
                            session.add(data)
                            await session.flush()
                            session.expunge(data)
                            break
            except Exception as e:
                self.logger.critical(f'Exception while create user info!{uid}\n{e}')

    # endregion

    async def is_exist_space_dyn(self, dynamic_id: str) -> bool:
        """
        如果空间动态存在动态id就返回True
        :param dynamic_id:
        :return:
        """
        while 1:
            try:
                async with self.sqliteLock:
                    async with self.AsyncSession() as session:
                        sql = select(SpaceDyn).where(dynamic_id == SpaceDyn.dynamic_id)
                        result = await session.execute(sql)
                        data = result.scalars().first()
                        if data:
                            return True
                        else:
                            return False
            except Exception as e:
                self.logger.critical(f'Exception while check is exist spece dyn! {dynamic_id}\n{e}')

    async def check_up_space_dyn(self, uid: int):
        """
        更新数据库中的up主空间动态和up信息 （爬取数据并处理部分！
        :param uid:
        :return:
        """
        try:
            uid = int(uid)
        except:
            self.logger.error("Invalid uid: {}".format(uid))
            return
        checking_mark = False
        while 1:
            if uid in self.now_check_up:
                time.sleep(1)
                checking_mark = True
            else:
                self.now_check_up.append(uid)
                break
        if checking_mark:
            if uid in self.now_check_up:
                self.now_check_up.remove(uid)
            return
        history_offset = ""
        dyn_obj = None
        is_lot_up = False
        dynamic_flag = False
        is_lot_dyn = 0
        self.logger.debug(f"检查up主 {uid} 空间中")
        while 1:
            try:
                resp = await grpcapi.grpc_get_space_dyn_by_uid(uid, history_offset)
                resp_len = len(resp.get('list', []))
                self.logger.info(f'获取到{uid}空间响应{resp_len}条！')
                space_dyn = DynTool.solve_space_dyn(resp)
                history_offset = space_dyn.historyOffset
                hasMore = space_dyn.hasMore
                latest_dynamic_timestamp = int(time.time())
                if space_dyn.DynList:
                    for dyn_obj in space_dyn.DynList:
                        if not dyn_obj:
                            continue
                        if dyn_obj.dynCard.pubTs <= latest_dynamic_timestamp:
                            latest_dynamic_timestamp = dyn_obj.dynCard.pubTs
                        if await self.is_exist_space_dyn(dyn_obj.dynamicId):
                            dynamic_flag = True
                            break
                        else:
                            is_lot_dyn = await self.create_space_dyn(dyn_obj)
                            if is_lot_dyn:
                                is_lot_up = True
                # 终止规则
                """
                1.空间没有更多的动态
                2.遇到获取过的动态
                3.遇到超时的动态
                4.遇到抽奖的动态
                """
                if is_lot_dyn:
                    break
                if not hasMore:
                    break
                if dynamic_flag:
                    break
                if int(time.time()) - latest_dynamic_timestamp >= self.max_separat_time:  # 超过时间的直接跳过
                    break
            except Exception as e:
                self.logger.critical(f"获取取关uid:{uid} {history_offset}失败！\n{e}")
                await asyncio.sleep(10)
        if dyn_obj:
            self.logger.info(
                f"uid:{uid} {dyn_obj.uname if dyn_obj else ''} 空间有动态")
            await self.update_up_status(uid, dyn_obj.uname, dyn_obj.dynCard.officialVerify)
        else:
            self.logger.warning(
                f"uid:{uid} {dyn_obj.uname if dyn_obj else ''} 空间没有动态")
            while 1:
                try:
                    async with self.sqliteLock:
                        async with self.AsyncSession() as session:
                            sql = select(UserInfo).where(UserInfo.uid == uid)
                            result = await session.execute(sql)
                            userinfo = result.scalars().first()
                            break
                except Exception as e:
                    self.logger.critical(f'Exception while query userinfo by uid!{uid}\n{e}')
            await self.update_up_status(uid, userinfo.uname, userinfo.officialVerify)
        self.logger.debug(
            f"uid:{uid} {dyn_obj.uname if dyn_obj else ''} 空间动态检查完成！{'是抽奖up' if bool(is_lot_up) else '非抽奖up'}")
        self.now_check_up.remove(uid)

    async def update_up_status(self, uid: int, uname: str, officialVerify: int = -2, update_ts: int = int(time.time())):
        """
        根据数据库中内容更新up状态，只有当遇到终止条件时才能将更新时间设置为当前时间
         ### 核心函数！
        :param uname:
        :param update_ts: 更新时间
        :param uid:
        :return:
        """

        def is_lot_up(spdyn: Type[SpaceDyn]):
            """
            判断每个动态是否符合抽奖up的条件
            :param spdyn:
            :return:
            """
            if int(time.time()) - spdyn.pubts >= self.max_separat_time:  # 超过最大时间，不判断动态是否是抽奖动态，直接标记为非抽奖动态
                return False

            return bool(spdyn.is_lot_dyn)

        while 1:
            try:
                async with self.sqliteLock:
                    async with self.AsyncSession() as session:
                        async with session.begin():
                            sql = select(SpaceDyn).where(uid == SpaceDyn.Space_Dyn_uid).order_by(SpaceDyn.pubts.desc())
                            result = await session.execute(sql)
                            space_dyn_group_by_uid = result.scalars().all()  # 最新的在最前面
                            isLotUp = 1 if len(list(filter(is_lot_up, space_dyn_group_by_uid))) > 0 else 0
                            if len(space_dyn_group_by_uid) > self.max_recorded_dyn_num:
                                delete_list: list[SpaceDyn] = space_dyn_group_by_uid[
                                                              -(len(space_dyn_group_by_uid) - self.max_recorded_dyn_num):]
                                for delete_dyn in delete_list:
                                    await session.delete(delete_dyn)
                            sql = update(UserInfo).where(UserInfo.uid == uid).values(
                                isLotUp=isLotUp,
                                upTimeStamp=datetime.fromtimestamp(update_ts),
                                officialVerify=officialVerify,
                                uname=uname,
                            )
                            await session.execute(sql)  # 更新状态！
                            break
            except Exception as e:
                self.logger.critical(f'Exception while check is lot up!{uid}\n{e}')

    async def check_db_exist_up(self, uid: Union[int, str]) -> bool:
        """
        检查数据库中是否存在up，并返回数据库中的up是否为抽奖up
        :param uid:
        :return: True 代表是抽奖up
        """
        while 1:
            try:
                if isinstance(uid, str):
                    if not str.isdigit(uid):
                        self.logger.error(f"Invalid uid! uid:{uid}")
                        return False
                    else:
                        uid = int(uid)
                # self.logger.debug(f"Checking uid: {uid}! https://space.bilibili.com/{uid}/dynamic")
                if uid in self.lucky_up_list:
                    return True
                async with self.AsyncSession() as session:
                    sql = select(UserInfo).where(uid == UserInfo.uid)
                    async with self.sqliteLock:
                        session_res = await session.execute(sql)
                    res = session_res.scalars().first()
                if res:
                    if (datetime.now() - res.upTimeStamp).days < self.check_up_sep_days:
                        return bool(res.isLotUp)
                    else:
                        self.logger.debug(
                            f'uid:{uid}数据库中数据太老\t数据库中最后时间{res.upTimeStamp.strftime("%Y-%m-%d %H:%M:%S")}')
                else:
                    self.logger.debug(f'uid:{uid}数据库中不存在')
                    await self.create_user_info(uid)
                # 更新up的空间动态数据库
                await self.check_up_space_dyn(uid)
                return await self.check_db_exist_up(uid)
            except Exception as e:
                self.logger.critical(f'uid:{uid} 获取取关用户空间失败！\n{e}')
                await asyncio.sleep(10)

    async def check_lot_up(self, following_list: list) -> list:
        self.logger.debug(f'检查关注列表:{following_list}')
        results = await asyncio.gather(*[self.check_db_exist_up(uid) for uid in following_list])
        ret_list = [following_list[idx] for idx, result in enumerate(results) if not result]
        return ret_list

    def get_lucky_up_list(self) -> []:
        if os.path.exists(CONFIG.root_dir + 'grpc获取动态/src/获取取关对象/中奖up.json'):
            with open(CONFIG.root_dir + 'grpc获取动态/src/获取取关对象/中奖up.json', 'r', encoding='utf-8') as f:
                return json.loads(f.read()).get('up_ids')
        else:
            with open(CONFIG.root_dir + 'grpc获取动态/src/获取取关对象/中奖up.json', 'w', encoding='utf-8') as f:
                f.write(json.dumps({'up_ids': []}, indent=4))
            return []

    async def main(self, following_list: list) -> list:
        if type(following_list) is not list:
            return []
        self.sqliteLock=asyncio.Lock()
        self.lucky_up_list = self.get_lucky_up_list()
        resp_list = await self.check_lot_up(following_list)
        return resp_list


async def _run(*args, **kwargs):
    _____test = GetRmFollowingListV1()
    result = await _____test.main(
        [783075, 14238585, 4689610, 477007052, 32741563, 7349, 360234219, 480761641, 479122299, 171844704, 141664434,
         7987912, 5762882, 1815364, 13829896, 59097656, 29329085, 436197297, 14626386, 26989008, 295396262, 319084300,
         3493144272309101, 451115073, 587067607, 330113, 521548831, 494611210, 3493258283977582, 108866409, 1060170678,
         185709816, 252110355, 477782158, 1517763, 15938156, 369355405, 438108472, 303036871, 3546574533691447,
         1980919855, 73051222, 485852279, 657804, 201189, 3546565746624875, 358243841, 807817, 12901940, 488589185,
         665181, 31230055, 55479977, 22238589, 268999208, 66607740, 102670251, 23723448, 3493259242375305, 234430486,
         25117083, 3493290997451047, 688537578, 1819400390, 701179700, 3546575387232823, 1617515924, 478299220,
         1749080872, 1920908011, 1432747633, 515019371, 1988816464, 20094989, 14871346, 3494378450454586, 502193688,
         43219807, 1271916102, 497525820, 68021907, 3546564282812924, 3494370223327232, 489412051, 2131450586,
         1489545634, 315151971, 2390163, 1310714247, 396481253, 391774002, 514926676, 494934731, 11131476, 631146901,
         403940805, 441897078, 18234591, 396788198, 249153892, 98666360, 11223799, 1069874770, 20488878,
         3537109822474581, 370877395, 38385543, 698926571, 25879971, 47236123, 1150915963, 198748058, 3494367880809387,
         3493134099024327, 165016731, 12260, 1097927383, 669171629, 516677641, 1798443432, 396998418, 8615846,
         3546556598847987, 104655299, 6446922, 15084373, 6458603, 21562856, 333515232, 2122458627, 28200210, 2078781964,
         3546589056469052, 3546558670834289, 413703, 84706708, 800431, 274459325, 1628139107, 171086, 3494361004247573,
         3546579422152881, 190942638, 485568023, 3493106940906178, 504043099, 15116146, 477318199, 194046502, 689904,
         519872029, 3494380539218906, 481855819, 162776218, 8244646, 35781336, 3546390745581649, 66596113,
         3546580187613271, 1453409239, 3493135424424688, 28451621, 7971871, 3546564666591611, 38034169, 557818222,
         326246517, 103048625, 1265301803, 1202880548, 621089888, 358247498, 55051092, 32487552, 283301853, 1371735722,
         375040863, 310268345, 100022032, 594558993, 509704602, 3546561392937060, 2143947781, 394988440, 2088331161,
         1504129585, 1581329897, 190854052, 55439761, 7744849, 1530628534, 7936287, 102751804, 70903428, 1752630832,
         305470882, 314387912, 15858567, 480810988, 430726, 367103968, 518888859, 326530944, 32700318, 6731340, 2941854,
         3546571564125010, 434338080, 107256866, 3493082817366845, 3493093607213343, 474363893, 53166650, 2979938,
         598658795, 3546390235974086, 21767408, 393268767, 320162664, 496261881, 275956490, 191002806, 1441962837,
         1895614, 11357018, 24490535, 301717426, 404888281, 491728962, 1828396424, 11643866, 39737405, 221648, 4287618,
         2108856, 2017611, 42210268, 35643203, 430426421, 269319344, 9064879, 19738891, 439004370, 488779255, 226661554,
         12333557, 457761794, 440121192, 3127528, 4564056, 69112541, 1601764239, 546189, 11164088, 36336420, 7295246,
         45229189, 25927896, 516467949, 164070978, 1099370005, 91537756, 297594331, 3546565765499705, 1431996375,
         8084791, 1895958311, 4401694, 1524554405, 624052719, 474267806, 137452723, 103128201, 421650354, 1694196506,
         2013348916, 3537120727665638, 38125899, 38454540, 88160614, 32367854, 526510260, 700608201, 1536568491,
         701009467, 41377819, 32365949, 1714748424, 415280699, 256872101, 327485625, 156619610, 251768781, 32546349,
         6800958, 1682284, 598819925, 49960899, 2380472, 2229752, 176063604, 11007230, 3494367671093965, 356734330,
         6014878, 154021609, 46545652, 421762587, 12566101, 8878219, 3078223, 95722247, 522357826, 23730666, 701623084,
         275203073, 1771385364, 3493271848356790, 392979, 10814669, 291224482, 20348990, 1832605957, 590490400,
         37534850, 323248245, 3494377817114721, 51612745, 669716245, 83677665, 435969671, 282067352, 11939589,
         109178183, 428040854, 1900141897, 5639656, 450619928, 3288389, 36047134, 483232841, 7407506, 104853743, 448823,
         25911961, 3493105997187935, 170088482, 677378178, 32589074, 263680381, 34924877, 32883344, 25826990, 179288789,
         1096034982, 3493085814196605, 11133002, 677744233, 444848705, 3537106980833281, 1504133275, 241332396,
         358607628, 26023642, 492840942, 101328188, 3851837, 18512544, 27734901, 1654470, 321206743, 302651406,
         11714311, 1514206231, 275163312, 30682056, 281718537, 3546384064055449, 1669328690, 479409514, 16754498,
         11233223, 107846324, 593563765, 65538469, 624708064, 20912836, 355532159, 16097105, 27327545, 330782844,
         316955009, 3537119901387660, 124101889, 3461577040726165, 396075651, 470807766, 81824112, 3493265078749972,
         181676986, 95339808, 3546375679642190, 486633990, 416076409, 27218150, 348498282, 1598041481, 429714179,
         418124514, 3546372957539119, 6754449, 41676214, 3493293524519197, 47563275, 37390043, 1156814094, 17367640,
         1773346, 1393437, 28822227, 387087511, 673059520, 304578055, 551534193, 1633653440, 278741100, 249512,
         38331130, 7596516, 297207611, 125047879, 265004917, 158119101, 2080314391, 629381542, 23068975, 315947288,
         291937147, 1210621649, 1568811899, 6421869, 297153101, 12174039, 404839209, 14092640, 41140492, 178822893,
         96005382, 602664449, 669497011, 121156407, 9411426, 432174249, 1606210274, 4364539, 172233467, 435765590,
         353609978, 470969470, 80484720, 28346875, 14141146, 546962791, 517780624, 697091119, 3493080560830654,
         479326757, 381820630, 7394394, 34389666, 480582281, 32771687, 1191520504, 628357704, 152370986, 383423248,
         493570956, 3493285494524746, 15466785, 5836069, 23620015, 43249720, 1976532950, 1800527749, 429741851,
         229733301, 68559, 77669328, 543191732, 1046210349, 479506892, 193004510, 407488612, 106590731, 316674559,
         2342793, 397347794, 581924313, 493105507, 1995044456, 67360734, 438988821, 23920239, 160972207, 85649095,
         218413290, 28856253, 10337485, 309417869, 3494350191331449, 6771326, 92545952, 14079394, 3493123841853732,
         3493093313612062, 128688586, 29296192, 670562216, 3461582034045213, 410439148, 1094015124, 28767705, 590729158,
         3493076800636934, 1676248821, 96646652, 3461568540969424, 3493141587953915, 326335590, 237691744, 397554988,
         1643590635, 423993372, 387325688, 3461568046041659, 3493138503043671, 352111, 554767833, 23791195, 388368041,
         702456154, 2997891, 444175222, 3493132035427070, 1230202404, 480940351, 351188445, 1309148041,
         3494357252442916, 4036386, 112326892, 5660955, 480828333, 378972233, 113362335, 64391344, 77196546, 2100609493,
         303794380, 3493270034320031, 479384351, 411275062, 327711134, 2043559402, 5628099, 3461575931333240, 520065230,
         399918500, 1863894913, 3494380906220408, 3536994034518110, 284514169, 402923390, 348989367, 2089687241,
         250139262, 626777350, 172447618, 1260095253, 8249718, 11167, 6008893, 381400554, 3461576510147287, 25594460,
         251347544, 622872714, 206803, 37636616, 521739326, 1329702678, 294675228, 1926095632, 16193227, 689955536,
         17495996, 402417817, 2138746869, 30698151, 2028453585, 338617869, 397672, 3493296596846957, 3461570491320430,
         427992641, 336251563, 31659234, 21619102, 1280231019, 1917159403, 447998010, 502925577, 1858861103, 1112038947,
         3206906, 513848090, 315487964, 1467016374, 478822905, 663973537, 3493075674466595, 1390316020, 12306702,
         1043123416, 102365899, 477401779, 13337595, 2196632, 304174970, 471278344, 108412997, 163637592, 17202395,
         67991584, 37489940, 1067722283, 697654195, 420231720, 16135497, 626686695, 1464911018, 2208740, 1821110,
         346124580, 4046983, 4425726, 590123836, 2383748, 903059, 1245973046, 1621080508, 508215481, 39627524,
         387783803, 91254197, 2482644, 6014199, 1864084681, 598464467, 403748305, 138780964, 1609080178, 51365206,
         278760537, 493230543, 1242470427, 1236638112, 3493297045637304, 553604843, 441833336, 946324, 454798830,
         8819263, 485344823, 3493284611623067, 74173022, 310237500, 29319155, 25691069, 1466721573, 1748347861,
         3493259263347190, 629601798, 1769820463, 1747594614, 1469995660, 1264190317, 519320444, 476834266, 1000185818,
         39067817, 1980678022, 1436758643, 1117600375, 324919579, 619185460, 2069686205, 472753524, 67109379, 3328811,
         160450916, 170484, 179922650, 32516392, 1687234219, 43912005, 260589207, 1309961152, 2920960, 14800002,
         1593537869, 2606266, 163734727, 503302, 1148209494, 1361426, 96153951, 27439170, 8307589, 544161405, 591977818,
         3493268260128845, 2125857107, 13839125, 243243435, 108766164, 1746158065, 671655664, 14068111,
         3493108064979599, 21903302, 406524780, 1035854407, 314328042, 383884380, 430536057, 1223566957, 356653495,
         389819007, 3493259372399028, 1007043700, 2519817, 342755096, 1681276938, 645997940, 688703815,
         3493263304559033, 492777646, 318432901, 550532631, 13608402, 20940424, 25195727, 403731699, 348628828,
         1032936971, 3493112676617137, 350680303, 1715206283, 33009791, 260645654, 486236365, 554591393,
         3493107765086660, 1382351145, 1813205998, 108109303, 696523981, 3493265644980448, 1249926364, 77878311,
         397124822, 20695818, 507576421, 1881796598, 660091334, 7338293, 8893909, 219282, 690856559, 43849017,
         669835376, 330774558, 1375742549, 95249204, 516685210, 18880012, 589455709, 462, 19888888, 103701980,
         293556783, 1266594350, 455899334, 4167456, 23207307, 3493081909299360, 19519514, 28880583, 7599814, 1678936905,
         1679077106, 381299032, 83853950, 9430574, 12158445, 30502823, 401752996, 174458614, 33380653, 3493075827558706,
         517215014, 130041813, 455417154, 8171802, 1757836012, 28128521, 4249008, 151007175, 12342800, 431895052,
         589987318, 699190660, 8558667, 531481791, 1902671895, 255573373, 26654947, 1734978373, 396981801, 294449792,
         32708316, 8641958, 27403737, 5987875, 699204462, 518766346, 378930414, 2636070, 10850238, 3493258430778340,
         3461566217324966, 3493087233968327, 22328199, 2030906413, 3991940, 450979444, 13809929, 250466416, 11855362,
         20990353, 405703, 10309752, 48084221, 474494914, 224560094, 213871127, 451426498, 443561230, 24190032,
         430191496, 188679, 3493258292365656, 3493279620401432, 1736214473, 1642917284, 14553873, 473950562, 474996426,
         1219706939, 341069816, 537789980, 535594950, 164648771, 2829782, 3493271410051869, 492135383, 442633432,
         335895159, 1569223452, 4166696, 97495251, 192532117, 2077889889, 420829515, 1623708130, 3493140996557165,
         672342685, 672353429, 3493078891497932, 439064571, 32472953, 26011769, 613747618, 1560523297, 32589387,
         318264246, 10552373, 3493134470220310, 13649066, 352735241, 1018020373, 426493711, 1613309826, 1915056903,
         21566266, 1084307615, 431880410, 492632117, 1184238527, 533299777, 353840826, 96205654, 388567456, 470339447,
         477521003, 1719936168, 3493277439363642, 442451015, 3493272267787074, 3493120991824198, 390892, 17223352,
         3493136928082317, 3493130563225878, 12861182, 911054, 746655, 393772246, 588907932, 3493143422962446, 11264229,
         1423222713, 436036217, 95012810, 425286, 294868409, 27224763, 295010654, 1630529821, 8263502, 35046997,
         394618791, 1717803969, 472986474, 452600545, 1808351, 95598836, 17871667, 1820484052, 3493258785196866,
         1111924041, 1010203255, 11978336, 429886010, 7815280, 3493145004215109, 628823248, 35012692, 3493138521917976,
         481825242, 1862698, 3493138211539444, 55434671, 614205199, 144712254, 20431632, 883724, 3802666, 386137684,
         1944092630, 5872437, 83547787, 474595627, 34534514, 39160258, 14512148, 28673629, 4859207, 392053332, 2047131,
         152389373, 386100603, 515782245, 314457390, 33605910, 66871823, 553536, 288742222, 9978781, 34948171,
         1824814640, 1784584, 640307494, 387904979, 352637817, 337064732, 28153104, 618389864, 373076765, 518228229,
         383053366, 39743256, 274869173, 161775300, 262503053, 1788435884, 8564761, 695870138, 649661652, 2000317988,
         2018759930, 3493144041622273, 2136569666, 77324288, 333020125, 84132098, 12073864, 12562485, 611214594,
         30079180, 434378423, 3493145624971298, 526209453, 310269586, 414411614, 1700284274, 1217754423, 1784502180,
         151330137, 29528623, 147546636, 1424016425, 1201485436, 177789154, 94510621, 266153735, 1401964034, 54790268,
         181998984, 624757844, 418415916, 272882347, 2136060716, 404024712, 1273265116, 264869770, 461637, 396025514,
         23300919, 7058667, 1121571225, 1304031564, 164627, 1519134, 148246537, 663083059, 443856155, 393163404,
         647219041, 486402719, 3410169, 694703612, 701579432, 11792663, 111095065, 287886755, 375191059, 80505,
         492816348, 476525925, 32915414, 1048940570, 3493261245156293, 7195010, 587108252, 450905062, 526783157,
         1091536370, 39335774, 202653692, 1221549602, 4408371, 40936534, 1649120489, 179018030, 1181834006, 1204068176,
         573693898, 3151252, 436089892, 9332151, 327403407, 1375684168, 1736253801, 24747184, 159368949, 516638154,
         1281313539, 21613057, 664321, 182692790, 327652253, 16510117, 402754623, 53536596, 3493136779184802,
         1023693244, 5910565, 264862821, 549830353, 484696105, 428112437, 5581696, 387845133, 408715466,
         3493084174224228, 21675989, 1297043116, 381875112, 1401112858, 157707117, 3493134698810267, 340242809,
         390423754, 3493122537425488, 1829143880, 1400095964, 472064280, 284453579, 597396, 139219049, 592150173,
         8320848, 229166994, 1360257140, 541870034, 75940481, 110487933, 1811245084, 625043691, 181804397, 1836322665,
         245124971, 417333631, 1832904916, 449773, 20397515, 94281836, 12856442, 585316473, 191193770, 176242528,
         3493131766991076, 449535461, 471154468, 620617977, 4718291, 14218962, 1365027097, 2023231034, 481888304,
         2573119, 267025314, 8492739, 59188721, 115058458, 286187082, 1355412269, 472547791, 86566982, 1899874684,
         1979573156, 9463690, 22639672, 7893749, 1362937197, 702250475, 14941159, 441193619, 320258, 405815805,
         1068536952, 24889090, 284040904, 524728969, 1958740327, 29382783, 203337614, 253761257, 491302664, 2026733267,
         1667246209, 327352157, 315124029, 57704859, 2505015, 8315419, 18363843, 434003400, 573937, 619805457,
         153021560, 361775100, 28968096, 343348, 31578954, 3493139945884106, 192037084, 352853757, 3493121648232684,
         388100568, 89818930, 1912950348, 3493108058687817, 1722444730, 389712930, 385281102, 1079825019,
         3493138154916480, 610581421, 1743157, 389836802, 395188578, 6345879, 1060840106, 420461147, 582046218, 2177677,
         396672902, 1829172354, 8684591, 335942, 599062482, 477631979, 14636150, 250508441, 18729667, 1599039155,
         1473609003, 405370021, 531512975, 341978838, 439934, 478691043, 1539809439, 20231474, 423738152, 36736669,
         34165837, 114146876, 149592, 142400951, 1497951706, 670985121, 31814567, 390483777, 636408783, 2132566155,
         277665295, 7370030, 625647470, 1687713511, 384262249, 1227931513, 28380168, 10733293, 1538910381, 99377554,
         512193161, 26607148, 439868658, 613115943, 672328094, 20259914, 517491339, 276928941, 43855, 325272035,
         133901828, 905323, 413203143, 23153706, 1309317001, 1527926402, 1618410357, 1899153123, 1223484261, 283628778,
         1084222017, 571791768, 486897312, 1748623731, 347768288, 414059218, 1294856852, 3461565898558001, 5581898,
         2733216, 53490139, 475656353, 236178045, 198512590, 26916676, 19167763, 3493107070928978, 294840435, 454067156,
         29143038, 62411789, 443735407, 560299586, 668745692, 470806599, 230533837, 745493, 412253046, 9448580,
         296404949, 50621949, 7676195, 8412516, 3461570239662267, 408196550, 19565962, 688379639, 116100610, 176932693,
         94114029, 389894527, 20467627, 504406727, 3493115843315726, 1732540672, 319763164, 3493080527276309,
         1847904200, 523673381, 553450157, 1458577926, 37610578, 1418540128, 52229030, 1797782115, 17167101, 23454070,
         4067807, 2719663, 517207238, 37408712, 19093414, 30612248, 130636947, 75547577, 34646754, 32686320, 13407784,
         83522058, 1436878388, 631208134, 2031136206, 1611081258, 258874266, 282875499, 280127123, 473887933, 28732825,
         145239325, 21354057, 494915529, 21942198, 49533273, 457627208, 67192137, 676200579, 2038413965, 14576879,
         335916773, 1344723, 3493132547131942, 17286505, 5633240, 354094134, 1759308797, 2124352378, 1074642712,
         477794338, 255951927, 614748272, 93415, 351030550, 1024186553, 18100888, 387016113, 168064909, 624211844,
         7458285, 25150941, 19729756, 17608705, 2123631024, 25418902, 341877317, 1118954517, 322439564, 2040295995,
         449658766, 168587890, 13418682, 521172212, 385285905, 66391032, 1280491258, 204133090, 274282526, 32943642,
         488791101, 46284103, 1869712375, 388818784, 10667811, 43507744, 627947058, 75335221, 83987060, 1857854961,
         201743859, 19608551, 1338030495, 220031260, 310611580, 359077363, 35819875, 1224108408, 156489, 94210923,
         824087, 11435956, 8700222, 405484897, 618970338, 171818544, 26937772, 442207408, 630327749, 1135476125,
         2727049, 280421456, 454765848, 168210, 26284092, 390898500, 12904778, 198310364, 220685927, 1048861669,
         12857790, 14895420, 307146265, 1964200560, 263580350, 355050741, 526106597, 1275608712, 1372433, 6336952,
         446221251, 1181877948, 8492486, 39984773, 1324228429, 295568661, 163653, 1107661859, 90759531, 1227117956,
         508560287, 480395060, 315927179, 297242063, 2000647614, 453653330, 172268948, 128695560, 215241165, 328288664,
         11499954, 48680168, 2313091, 1627320011, 330415548, 61115292, 318858790, 15369047, 1094543886, 166326710,
         32909772, 353318057, 396839417, 671315625, 281343477, 378595726, 176742118, 8024660, 671826414, 1115857458,
         46501987, 12326264, 20154571, 1994404466, 34088017, 43542097, 1154644530, 145901490, 25577001, 367459005,
         46510787, 252909207, 20826656, 395619513, 413748120, 15246445, 34977966, 354130317, 1358014912, 21605364,
         441307131, 338161383, 375143033, 1931030982, 2059201075, 1474345824, 1634066996, 76080175, 28298748, 28114396,
         29221909, 1580780548, 398869853, 14746289, 1140672573, 261435957, 1947305917, 4269122, 1422655257, 94652321,
         396826032, 18712128, 473786919, 277834525, 698122645, 14532146, 33721643, 514160575, 47224192, 105505,
         32648420, 1887925938, 222198830, 512105432, 10652075, 21990601, 3189284, 131043937, 112793351, 50073813,
         12659370, 1939180, 523173609, 362267277, 697739671, 112037663, 332182211, 26059294, 2030569756, 403038375,
         438319242, 50233288, 6917320, 578227337, 479918671, 60429538, 442380537, 352832555, 35528071, 1982203514,
         233108841, 1340190821, 552464042, 1543786474, 355804646, 3493108843023307, 382442218, 3774410, 233214756,
         6699767, 1232707257, 1297424, 574317507, 612932327, 23360330, 1019704303, 3821368, 238769759, 26100279,
         14373586, 20754392, 19352276, 102236507, 183536414, 1619878166, 1437582453, 20951119, 12119849, 261485584,
         28278455, 15773384, 258876977, 334445736, 1563192916, 313574240, 177838351, 238623328, 1278118266, 627938668,
         19487608, 399732046, 352435359, 44903085, 193181849, 95509351, 12043763, 1401928, 1167809473, 372398487,
         650663945, 434021034, 49129978, 404056966, 1418968119, 349218897, 671654059, 6491232, 51537052, 385443070,
         1937845235, 254140017, 206916906, 36836070, 641591444, 474930258, 549739, 36417437, 1823213, 368893740,
         1707842278, 38294246, 32078085, 271176426, 1167135969, 324412345, 578270486, 11616487, 12321125, 60253266,
         8523, 1495180530, 3493108553615755, 16302815, 313248263, 477761024, 3493115333707961, 1311706157, 34423885,
         2100679, 3493077178125184, 105022844, 580482962, 419641453, 395855967, 266681803, 436377373, 4296924,
         473837611, 354077280, 21296489, 488055582, 2009080466, 90113724, 18906831, 1507777137, 456114439, 628884449,
         454055944, 522657750, 8755206, 8354463, 361542489, 441618587, 910774, 1365324912, 35944556, 1590177913,
         3493082829949795, 326837779, 1863639532, 17418437, 472807480, 1769003602, 247924937, 43695117, 10334523,
         174890586, 626332915, 632171719, 470156882, 77660417, 2065667136, 662281422, 32187114, 14118553, 326216,
         35359510, 1561146461, 3493080047029111, 352104082, 260226837, 1497089648, 2000380121, 481432974, 1054571952,
         444854666, 4011478, 2013461554, 1521060322, 1363457, 390790219, 3461581786581601, 2337891, 34281603, 320029358,
         508047359, 664086886, 686606640, 1695585090, 504505810, 5168707, 487777172, 25996096, 2023576999, 473888452,
         109860794, 13294740, 24141927, 57276677, 298515499, 456869112, 3894214, 349983685, 480836706, 34144840,
         314076440, 8349119, 4186021, 358895809, 24268847, 23796550, 382198016, 7788379, 281172076, 515090296,
         1857715455, 9817849, 1459627806, 26350092, 10330740, 1723478808, 1622683999, 356932773, 152353856, 212410423,
         638816489, 571842925, 452371941, 72338055, 1384287229, 1705813027, 60509716, 97301186, 11012023, 513273343,
         38291030, 22089099, 17134369, 383530301, 99157282, 417583826, 303959698, 3997812, 700998549, 1202960418,
         323024456, 348632860, 43222392, 23912390, 587272348, 482474986, 2728123, 1827922782, 9838560, 20423027,
         76542346, 1411395800, 483104470, 434718226, 652205462, 1550656130, 438465376, 698519996, 519585408, 198427927,
         1986391665, 17456270, 470933781, 503181914, 33937791, 12344466, 38271760, 1563623925, 2151007, 38850658,
         1278608297, 315554376, 1059199067, 517327498, 673278548, 442904752, 512174070, 2075485541, 417064185,
         151968662, 514645997, 372984197, 298111959, 223289804, 28869827, 2750975, 2722124, 1296653714, 9272530,
         320573000, 280135728, 3493082584582776, 597000437, 314358436, 389960714, 323236011, 1517698920, 13726932,
         49898816, 1060913161, 37900431, 2811069, 612634828, 591892279, 3461583101495313, 26846937, 84736704, 494971549,
         19446443, 237140787, 34678216, 33549637, 8558290, 1420982, 365376596, 171848802, 371612, 474787619,
         3461576967326521, 400797730, 3252931, 180798348, 2244322, 26344439, 396742947, 1335713025, 403502249,
         254031358, 425475475, 256468152, 1256480893, 294887687, 430229596, 28278764, 293985384, 20099861, 496845537,
         55507, 392800585, 20730073, 383171927, 3493075143887555, 185579326, 75440072, 416622817, 391956758, 3095471,
         19428259, 679237565, 679634912, 345066628, 280389001, 282234318, 212273071, 1310421486, 48394160, 1099371313,
         15252895, 510951024, 1114539017, 158248634, 168099294, 703021105, 1916474, 18306025, 489400034, 275981,
         35649933, 1890662098, 605574790, 2473680, 337294714, 32708657, 33690608, 26398586, 13899470, 2044333698,
         25592156, 357061011, 5658712, 476258320, 1895566564, 1549029945, 1380630215, 1109089292, 108618052, 671874745,
         481819318, 5508366, 1880049807, 439895126, 175782095, 3451637, 679380709, 36700106, 38734721, 1009865237,
         350059087, 697456406, 7584632, 433865481, 39668304, 1821077358, 209757637, 388394328, 474480402, 1049232979,
         361108677, 51949673, 499526279, 324430888, 2070837133, 3461582858226320, 442552472, 203680252, 509069409,
         15810, 8049684, 137543719, 679233866, 15551761, 297991412, 22656934, 19432127, 482515584, 39688895, 690876846,
         386557236, 433715, 24090462, 510456271, 8065087, 89350, 16720943, 408539084, 26499192, 383587023, 388940759,
         40488476, 432158620, 174501086, 105124431, 7428971, 15038209, 37090048, 521568502, 7374387, 1723817, 50070958,
         1312702972, 2195452, 429711841, 508652776, 1687861308, 627993896, 1491996, 672596161, 490494088, 22192872,
         294081438, 1096128140, 1960460, 3461566812916000, 647193094, 2873935, 7770395, 477342747, 6875363, 7327911,
         13565996, 48039, 1096228210, 46897637, 23947287, 37755980, 6014992, 3461568324962897, 27171001, 28861187,
         2004454126, 279557346, 297226856, 234468266, 69846886, 1249038689, 233585707, 357430679, 1775691673, 395936853,
         463440, 52914908, 485512034, 296732, 8449613, 436953430, 166491016, 477322873, 32708726, 357515451, 254726274,
         27899754, 1697120080, 5626102, 1501380958, 224267770, 28195191, 2234185, 692772, 89042331, 179444595, 1701169,
         193147738, 4305299, 454719565, 14229967, 10993427, 6739643, 1716815392, 1297094521, 1465254680, 99056473,
         65900190, 3821157, 8969156, 5806214, 1425239276, 2050791825, 1879281116, 1352646, 2711477, 404916478,
         551358292, 9862450, 526793830, 674734501, 523002262, 627652843, 472727109, 31880257, 671538942, 313739068,
         51289427, 545396386, 1576770770, 414406143, 2872388, 543793163, 488818381, 600428973, 358703861, 8758872,
         519781260, 22121599, 384514636, 11895671, 2285353, 1903083115, 23155481, 376831143, 1074346981, 941799,
         14272337, 346210208, 32680671, 528461028, 1659404043, 346059, 393116415, 361879959, 70070, 268035532,
         103261012, 1318635551, 2034289345, 19986917, 178047796, 23455732, 52502322, 349203878, 2114847153, 1712907935,
         250610800, 928123, 395991094, 204120111, 478697685, 2137338328, 207539637, 327903909, 1497999793, 3066511,
         524662256, 475443398, 6415072, 7732998, 385378925, 647310437, 1114458985, 545424466, 300486, 535872071,
         64985859, 17561885, 10119428, 1242439207, 8618005, 256667467, 98627270, 394609671, 2689967, 12120722,
         1857872834, 1213732126, 3461568327059704, 3322724, 36882906, 327753090, 171368594, 4059920, 7594110, 401623898,
         518817, 1644510012, 10215511, 649869035, 647409444, 3742241, 1394199240, 321650277, 1815643596, 432499697,
         275016013, 701086667, 70666, 1843844124, 96264399, 451618887, 890735, 89123515, 1384724778, 3461568324963100,
         512488108, 1047327344, 1930420310, 497271088, 680677803, 17474339, 321173469, 64137054, 1930028358, 1109922940,
         216844, 1925340085, 1231626434, 36965114, 2468209, 31700507, 247210788, 1938373498, 404828731, 311871090,
         207261582, 485131373, 30973654, 429744755, 304395490, 299732210, 381776424, 39270745, 3811154, 19319172,
         267637532, 1562750317, 270354343, 90183256, 1560010685, 21838789, 38367534, 43502445, 505370779, 1570461392,
         361078062, 57608186, 216025, 1536750746, 108055211, 365842307, 226257459, 1736210, 487516237, 32708543,
         8784855, 1182716845, 7949826, 207268661, 618447026, 513394156, 49631892, 496148832, 372273068, 1961855,
         526489877, 596101392, 15832838, 349976981, 157761, 1300801804, 427607291, 388742853, 9645447, 23640791,
         7005369, 23604445, 481508309, 458059309, 212345699, 1337963522, 2080561247, 471259688, 471303350, 25480023,
         526530563, 534970347, 2522486, 27534330, 285881562, 1636034895, 441666939, 601737168, 471830323, 647359920,
         396569392, 19209120, 627324384, 2140091933, 382580184, 1802392, 1871737115, 21883676, 73820664, 503734155,
         492703947, 1022504026, 1706142938, 521960086, 284633638, 43142987, 2072717192, 1871001, 233114659, 13972445,
         13968550, 504140200, 65177412, 101037051, 1713021018, 594758787, 388531501, 483138395, 473830670, 1447555,
         85816940, 1724750549, 30928054, 303469491, 392836434, 317617495, 544336675, 1675310401, 9617619, 348507004,
         1799259609, 458165375, 133934, 10500463, 17138783, 10462362, 1817782127, 45502, 39335300, 1342522641,
         517027781, 22863497, 17125638, 364510642, 1475698485, 374681770, 12145493, 12799703, 2336560, 169260386,
         696057192, 384306796, 2017403036, 81976, 12939237, 22606862, 351085345, 1494786563, 15778724, 628895496,
         326499679, 87740339, 23876661, 90684627, 628941292, 65764710, 177613639, 8372353, 13801726, 95205743,
         287795639, 3766866, 4751210, 40433405, 4242174, 39180492, 30819051, 2048745674, 2145624252, 2162457, 39478298,
         1567835994, 586631367, 1643484295, 284551466, 8047632, 172248761, 1896914126, 193558681, 487658251, 1265680561,
         50329337, 487411222, 617775502, 196739169, 419872064, 351453915, 78110942, 2484793, 239384911, 374914737,
         323734892, 26987075, 364680842, 2177350, 307460405, 21341812, 3519797, 1875094289, 75, 470821528, 703007996,
         37677705, 253350665, 43272050, 485401838, 275930985, 111507304, 946974, 6131739, 544156600, 2056036175,
         669928891, 1783133732, 2042487748, 271265555, 237111975, 1020770905, 1906121828, 107355143, 647428124,
         471402555, 37313138, 1657906522, 176858937, 1734519, 171617844, 1276013191, 1221879760, 3532811, 1902330279,
         164313004, 3625120, 674121390, 527134350, 13264987, 16509831, 1962211949, 226363323, 1173033158, 486874632,
         146668655, 348648559, 645278427, 3295, 663775136, 483311105, 1098417804, 9709867, 686890441, 523922454,
         489004577, 8279670, 269415357, 680082822, 1929903779, 373471445, 1713150198, 178323184, 666726801, 396895652,
         1269265572, 1619305144, 26931247, 696263455, 96236325, 526886168, 2072586344, 1300259363, 2136227062, 5256791,
         1287676222, 2091407755, 12433090, 351621599, 422568947, 11644473, 627710058, 521950960, 627553716, 327306505,
         1201837501, 434950053, 628309293, 1248013461, 358336849, 302417610, 488941099, 690588074, 394227174, 269396974,
         559923182, 400421892, 488757623, 9199433, 348383515, 316028292, 1419922527, 403912654, 5126625, 477646977,
         35123204, 1905920137, 281968914, 389552703, 18202105, 424124062, 368671873, 586586962, 1024366005, 430351780,
         1010614805, 1498347556, 1802011210, 1461918277, 434334701, 1845213301, 97478567, 516428148, 585326130,
         454802537, 31107135, 380800207, 689825283, 295950464, 218201665, 691415738, 1416328570, 455442261, 206706701,
         626347730, 514167860, 429702140, 476720460, 1521701206, 28955025, 388551693, 259183379, 587079556, 125526,
         1749591304, 1712677288, 1074636993, 651410600, 1280063592, 57863910, 32976792, 336649293, 38068403, 382666849,
         48455786, 1856528671, 102637603, 360285629, 6529759, 3211302, 154058118, 11465660, 2048450375, 406425799,
         389090626, 89868480, 356055412, 77238, 2529007, 434249025, 6608033, 253366881, 9728698, 4995329, 648861072,
         258852214, 177560641, 330246090, 418988661, 404987905, 382931759, 332632721, 526693814, 679151170, 362767725,
         4925207, 1959209, 577730079, 471130916, 485703766, 16836724, 21540057, 1221637505, 449658972, 690820064,
         99748932, 2089637378, 520494803, 247898886, 38566875, 37493793, 2571478, 109883179, 321899908, 434786180,
         402593521, 596026147, 686484574, 1623577932, 109630783, 36081646, 1617060218, 686978491, 632527928, 395845182,
         7951280, 447408756, 15770782, 651039864, 405247284, 421635439, 9535164, 505670427, 2250815, 49648241,
         473971483, 1182239224, 1497838690, 2454462, 388684610, 405285618, 597903167, 556214167, 511744123, 369401163,
         1779709282, 397287828, 25876945, 434976151, 22492980, 399259929, 375262988, 1488064527, 25503580, 282994,
         346469145, 352063206, 416540618, 137428020, 145544, 67198003, 670406059, 12907585, 334299, 1207226422,
         430040367, 343470950, 11491546, 677844599, 47994846, 50366363, 8463531, 35365327, 477316442, 471926059,
         17171565, 473499647, 401725914, 212395881, 480520643, 32289484, 6302748, 410502055, 386605536, 1508263674,
         15782465, 427983019, 333641046, 309134148, 386869863, 431073645, 50111839, 109778207, 382651856, 491424921,
         626795438, 1074675619, 162827591, 17236262, 381341826, 37663924, 448183233, 323060342, 1862906345, 1302729853,
         342507763, 388800103, 653768, 96611127, 513858872, 13730996, 1037013067, 670888431, 3760773, 686127,
         1476167907, 178429408, 325889132, 1236262203, 522202853, 628831867, 458088758, 10154196, 520816683, 181508854,
         402328562, 601620361, 102308177, 505566286, 531236984, 21707233, 1926487680, 434786611, 470231396, 1565860520,
         431646218, 3850213, 2029306, 4370617, 39101587, 884798, 281605299, 168687092, 476645168, 39776696, 194087395,
         1429723107, 3053296, 455722391, 107113230, 517461175, 13951855, 561914130, 597014012, 178690106, 574115689,
         183462346, 84567302, 361749232, 386055742, 401315430, 491190876, 410922660, 6983491, 353153459, 942755,
         518876755, 16720403, 26583216, 13164144, 620069664, 287390748, 408986595, 26012012, 630286526, 1815256098,
         675549760, 315523348, 510189715, 666624001, 474596369, 652239032, 1328260, 545433105, 1435278966, 174564264,
         343198, 375694493, 417353455, 421669645, 586006318, 571307144, 9321359, 2007250903, 401742377, 232472043,
         622557681, 25937785, 1464627422, 429643625, 502893941, 427487966, 486445583, 436170053, 396808737, 471822818,
         351899011, 25654099, 543816944, 598454078, 386615477, 485422279, 451913461, 473965081, 514362734, 417296980,
         652532931, 25876049, 601210376, 405724215, 533316954, 88675080, 200336749, 505010319, 494106427, 383666009,
         690100803, 481429887, 187878266, 31748830, 397664175, 410910599, 394373125, 383768376, 125086406, 334454303,
         205429635, 416514298, 340380931, 429597337, 306455387, 485213685, 407022539, 359127917, 92337361, 327988055,
         404066457, 630815423, 37896119, 643923340, 1741810867, 509955674, 242136088, 302951148, 39279965, 102176172,
         444815994, 102734471, 402925510, 477302667, 686581006, 471130755, 315819794, 643873396, 430835990, 231896831,
         473519710, 1129687681, 90668673, 1555246562, 12284595, 606438321, 85682906, 668794409, 1102455512, 544030731,
         63414376, 2056013660, 1120737881, 401739957, 544064685, 500615835, 403730552, 479444311, 438072446, 61055477,
         43222001]
    )
    print(result)
    return result


if __name__ == '__main__':
    _____test = GetRmFollowingListV1()

    print(asyncio.run(_run()))
