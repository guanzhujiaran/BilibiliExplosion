# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bilibili/broadcast/v2/laser.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bilibili/broadcast/v2/laser.proto',
  package='bilibili.broadcast.v2',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n!bilibili/broadcast/v2/laser.proto\x12\x15\x62ilibili.broadcast.v2\x1a\x1bgoogle/protobuf/empty.proto\"@\n\x0eLaserEventResp\x12\x0e\n\x06taskid\x18\x01 \x01(\x03\x12\x0e\n\x06\x61\x63tion\x18\x02 \x01(\t\x12\x0e\n\x06params\x18\x03 \x01(\t2V\n\x05Laser\x12M\n\nWatchEvent\x12\x16.google.protobuf.Empty\x1a%.bilibili.broadcast.v2.LaserEventResp0\x01\x62\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])




_LASEREVENTRESP = _descriptor.Descriptor(
  name='LaserEventResp',
  full_name='bilibili.broadcast.v2.LaserEventResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskid', full_name='bilibili.broadcast.v2.LaserEventResp.taskid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='action', full_name='bilibili.broadcast.v2.LaserEventResp.action', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='params', full_name='bilibili.broadcast.v2.LaserEventResp.params', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=153,
)

DESCRIPTOR.message_types_by_name['LaserEventResp'] = _LASEREVENTRESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LaserEventResp = _reflection.GeneratedProtocolMessageType('LaserEventResp', (_message.Message,), {
  'DESCRIPTOR' : _LASEREVENTRESP,
  '__module__' : 'bilibili.broadcast.v2.laser_pb2'
  # @@protoc_insertion_point(class_scope:bilibili.broadcast.v2.LaserEventResp)
  })
_sym_db.RegisterMessage(LaserEventResp)



_LASER = _descriptor.ServiceDescriptor(
  name='Laser',
  full_name='bilibili.broadcast.v2.Laser',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=155,
  serialized_end=241,
  methods=[
  _descriptor.MethodDescriptor(
    name='WatchEvent',
    full_name='bilibili.broadcast.v2.Laser.WatchEvent',
    index=0,
    containing_service=None,
    input_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    output_type=_LASEREVENTRESP,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_LASER)

DESCRIPTOR.services_by_name['Laser'] = _LASER

# @@protoc_insertion_point(module_scope)
