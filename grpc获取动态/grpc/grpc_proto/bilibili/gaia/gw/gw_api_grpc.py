# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/gaia/gw/gw_api.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.empty_pb2
import bilibili.gaia.gw.gw_api_pb2


class GaiaBase(abc.ABC):

    @abc.abstractmethod
    async def ExUploadAppList(self, stream: 'grpclib.server.Stream[bilibili.gaia.gw.gw_api_pb2.GaiaEncryptMsgReq, bilibili.gaia.gw.gw_api_pb2.UploadAppListReply]') -> None:
        pass

    @abc.abstractmethod
    async def ExFetchPublicKey(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, bilibili.gaia.gw.gw_api_pb2.FetchPublicKeyReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.gaia.gw.Gaia/ExUploadAppList': grpclib.const.Handler(
                self.ExUploadAppList,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.gaia.gw.gw_api_pb2.GaiaEncryptMsgReq,
                bilibili.gaia.gw.gw_api_pb2.UploadAppListReply,
            ),
            '/bilibili.gaia.gw.Gaia/ExFetchPublicKey': grpclib.const.Handler(
                self.ExFetchPublicKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                bilibili.gaia.gw.gw_api_pb2.FetchPublicKeyReply,
            ),
        }


class GaiaStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ExUploadAppList = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.gaia.gw.Gaia/ExUploadAppList',
            bilibili.gaia.gw.gw_api_pb2.GaiaEncryptMsgReq,
            bilibili.gaia.gw.gw_api_pb2.UploadAppListReply,
        )
        self.ExFetchPublicKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.gaia.gw.Gaia/ExFetchPublicKey',
            google.protobuf.empty_pb2.Empty,
            bilibili.gaia.gw.gw_api_pb2.FetchPublicKeyReply,
        )
