# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/app/splash/v1/splash.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.any_pb2
import bilibili.app.splash.v1.splash_pb2


class SplashBase(abc.ABC):

    @abc.abstractmethod
    async def List(self, stream: 'grpclib.server.Stream[bilibili.app.splash.v1.splash_pb2.SplashReq, bilibili.app.splash.v1.splash_pb2.SplashReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.app.splash.v1.Splash/List': grpclib.const.Handler(
                self.List,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.app.splash.v1.splash_pb2.SplashReq,
                bilibili.app.splash.v1.splash_pb2.SplashReply,
            ),
        }


class SplashStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.List = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.app.splash.v1.Splash/List',
            bilibili.app.splash.v1.splash_pb2.SplashReq,
            bilibili.app.splash.v1.splash_pb2.SplashReply,
        )
