# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/vega/deneb/v1/deneb.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.any_pb2
import bilibili.vega.deneb.v1.deneb_pb2


class VegaDenebRPCBase(abc.ABC):

    @abc.abstractmethod
    async def MessagePulls(self, stream: 'grpclib.server.Stream[bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReq, bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.vega.deneb.v1.VegaDenebRPC/MessagePulls': grpclib.const.Handler(
                self.MessagePulls,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReq,
                bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReply,
            ),
        }


class VegaDenebRPCStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.MessagePulls = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.vega.deneb.v1.VegaDenebRPC/MessagePulls',
            bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReq,
            bilibili.vega.deneb.v1.deneb_pb2.MessagePullsReply,
        )
