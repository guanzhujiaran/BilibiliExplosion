# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from pgc.gateway.vega.v1 import vega_pb2 as pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in pgc/gateway/vega/v1/vega_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VegaStub(object):
    """
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTunnel = channel.unary_unary(
                '/pgc.gateway.vega.v1.Vega/CreateTunnel',
                request_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.SerializeToString,
                response_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.FromString,
                _registered_method=True)


class VegaServicer(object):
    """
    """

    def CreateTunnel(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VegaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTunnel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTunnel,
                    request_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.FromString,
                    response_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pgc.gateway.vega.v1.Vega', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pgc.gateway.vega.v1.Vega', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Vega(object):
    """
    """

    @staticmethod
    def CreateTunnel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pgc.gateway.vega.v1.Vega/CreateTunnel',
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.SerializeToString,
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.VegaFrame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class VegaFrameDocStub(object):
    """
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Auth = channel.unary_unary(
                '/pgc.gateway.vega.v1.VegaFrameDoc/Auth',
                request_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthReq.SerializeToString,
                response_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthResp.FromString,
                _registered_method=True)
        self.Heartbeat = channel.unary_unary(
                '/pgc.gateway.vega.v1.VegaFrameDoc/Heartbeat',
                request_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatReq.SerializeToString,
                response_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatResp.FromString,
                _registered_method=True)
        self.MessageAck = channel.unary_unary(
                '/pgc.gateway.vega.v1.VegaFrameDoc/MessageAck',
                request_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.MessageAckReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_unary(
                '/pgc.gateway.vega.v1.VegaFrameDoc/Subscribe',
                request_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.SubscribeReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class VegaFrameDocServicer(object):
    """
    """

    def Auth(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MessageAck(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VegaFrameDocServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthReq.FromString,
                    response_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthResp.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatReq.FromString,
                    response_serializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatResp.SerializeToString,
            ),
            'MessageAck': grpc.unary_unary_rpc_method_handler(
                    servicer.MessageAck,
                    request_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.MessageAckReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Subscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.SubscribeReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pgc.gateway.vega.v1.VegaFrameDoc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pgc.gateway.vega.v1.VegaFrameDoc', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VegaFrameDoc(object):
    """
    """

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pgc.gateway.vega.v1.VegaFrameDoc/Auth',
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthReq.SerializeToString,
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.AuthResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pgc.gateway.vega.v1.VegaFrameDoc/Heartbeat',
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatReq.SerializeToString,
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.HeartbeatResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MessageAck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pgc.gateway.vega.v1.VegaFrameDoc/MessageAck',
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.MessageAckReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pgc.gateway.vega.v1.VegaFrameDoc/Subscribe',
            pgc_dot_gateway_dot_vega_dot_v1_dot_vega__pb2.SubscribeReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
