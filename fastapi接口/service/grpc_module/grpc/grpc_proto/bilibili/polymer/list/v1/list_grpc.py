# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/polymer/list/v1/list.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import bilibili.polymer.list.v1.list_pb2


class ListBase(abc.ABC):

    @abc.abstractmethod
    async def FavoriteTab(self, stream: 'grpclib.server.Stream[bilibili.polymer.list.v1.list_pb2.FavoriteTabReq, bilibili.polymer.list.v1.list_pb2.FavoriteTabReply]') -> None:
        pass

    @abc.abstractmethod
    async def CheckAccount(self, stream: 'grpclib.server.Stream[bilibili.polymer.list.v1.list_pb2.CheckAccountReq, bilibili.polymer.list.v1.list_pb2.CheckAccountReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.polymer.list.v1.List/FavoriteTab': grpclib.const.Handler(
                self.FavoriteTab,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.polymer.list.v1.list_pb2.FavoriteTabReq,
                bilibili.polymer.list.v1.list_pb2.FavoriteTabReply,
            ),
            '/bilibili.polymer.list.v1.List/CheckAccount': grpclib.const.Handler(
                self.CheckAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.polymer.list.v1.list_pb2.CheckAccountReq,
                bilibili.polymer.list.v1.list_pb2.CheckAccountReply,
            ),
        }


class ListStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.FavoriteTab = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.polymer.list.v1.List/FavoriteTab',
            bilibili.polymer.list.v1.list_pb2.FavoriteTabReq,
            bilibili.polymer.list.v1.list_pb2.FavoriteTabReply,
        )
        self.CheckAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.polymer.list.v1.List/CheckAccount',
            bilibili.polymer.list.v1.list_pb2.CheckAccountReq,
            bilibili.polymer.list.v1.list_pb2.CheckAccountReply,
        )
