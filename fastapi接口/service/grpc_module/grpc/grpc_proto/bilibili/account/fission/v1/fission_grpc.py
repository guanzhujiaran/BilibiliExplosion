# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/account/fission/v1/fission.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import bilibili.account.fission.v1.fission_pb2


class FissionBase(abc.ABC):

    @abc.abstractmethod
    async def Entrance(self, stream: 'grpclib.server.Stream[bilibili.account.fission.v1.fission_pb2.EntranceReq, bilibili.account.fission.v1.fission_pb2.EntranceReply]') -> None:
        pass

    @abc.abstractmethod
    async def Window(self, stream: 'grpclib.server.Stream[bilibili.account.fission.v1.fission_pb2.WindowReq, bilibili.account.fission.v1.fission_pb2.WindowReply]') -> None:
        pass

    @abc.abstractmethod
    async def Privacy(self, stream: 'grpclib.server.Stream[bilibili.account.fission.v1.fission_pb2.PrivacyReq, bilibili.account.fission.v1.fission_pb2.PrivacyReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.account.fission.v1.Fission/Entrance': grpclib.const.Handler(
                self.Entrance,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.account.fission.v1.fission_pb2.EntranceReq,
                bilibili.account.fission.v1.fission_pb2.EntranceReply,
            ),
            '/bilibili.account.fission.v1.Fission/Window': grpclib.const.Handler(
                self.Window,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.account.fission.v1.fission_pb2.WindowReq,
                bilibili.account.fission.v1.fission_pb2.WindowReply,
            ),
            '/bilibili.account.fission.v1.Fission/Privacy': grpclib.const.Handler(
                self.Privacy,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.account.fission.v1.fission_pb2.PrivacyReq,
                bilibili.account.fission.v1.fission_pb2.PrivacyReply,
            ),
        }


class FissionStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Entrance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.account.fission.v1.Fission/Entrance',
            bilibili.account.fission.v1.fission_pb2.EntranceReq,
            bilibili.account.fission.v1.fission_pb2.EntranceReply,
        )
        self.Window = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.account.fission.v1.Fission/Window',
            bilibili.account.fission.v1.fission_pb2.WindowReq,
            bilibili.account.fission.v1.fission_pb2.WindowReply,
        )
        self.Privacy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.account.fission.v1.Fission/Privacy',
            bilibili.account.fission.v1.fission_pb2.PrivacyReq,
            bilibili.account.fission.v1.fission_pb2.PrivacyReply,
        )
