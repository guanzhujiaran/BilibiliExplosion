# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/app/playerunite/v1/playerunite.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import bilibili.playershared.playershared_pb2
import bilibili.app.playerunite.v1.playerunite_pb2


class PlayerBase(abc.ABC):

    @abc.abstractmethod
    async def PlayViewUnite(self, stream: 'grpclib.server.Stream[bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReq, bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.app.playerunite.v1.Player/PlayViewUnite': grpclib.const.Handler(
                self.PlayViewUnite,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReq,
                bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReply,
            ),
        }


class PlayerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.PlayViewUnite = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.app.playerunite.v1.Player/PlayViewUnite',
            bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReq,
            bilibili.app.playerunite.v1.playerunite_pb2.PlayViewUniteReply,
        )
