# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bilibili.app.distribution.v1 import distribution_pb2 as bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bilibili/app/distribution/v1/distribution_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DistributionStub(object):
    """APP配置
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserPreference = channel.unary_unary(
                '/bilibili.app.distribution.v1.Distribution/GetUserPreference',
                request_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReq.SerializeToString,
                response_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReply.FromString,
                _registered_method=True)
        self.SetUserPreference = channel.unary_unary(
                '/bilibili.app.distribution.v1.Distribution/SetUserPreference',
                request_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReq.SerializeToString,
                response_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReply.FromString,
                _registered_method=True)
        self.UserPreference = channel.unary_unary(
                '/bilibili.app.distribution.v1.Distribution/UserPreference',
                request_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReq.SerializeToString,
                response_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReply.FromString,
                _registered_method=True)


class DistributionServicer(object):
    """APP配置
    """

    def GetUserPreference(self, request, context):
        """获取云端储存的用户偏好
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserPreference(self, request, context):
        """设定用户偏好
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserPreference(self, request, context):
        """获取云控配置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DistributionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserPreference': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPreference,
                    request_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReq.FromString,
                    response_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReply.SerializeToString,
            ),
            'SetUserPreference': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserPreference,
                    request_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReq.FromString,
                    response_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReply.SerializeToString,
            ),
            'UserPreference': grpc.unary_unary_rpc_method_handler(
                    servicer.UserPreference,
                    request_deserializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReq.FromString,
                    response_serializer=bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bilibili.app.distribution.v1.Distribution', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('bilibili.app.distribution.v1.Distribution', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Distribution(object):
    """APP配置
    """

    @staticmethod
    def GetUserPreference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.app.distribution.v1.Distribution/GetUserPreference',
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReq.SerializeToString,
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.GetUserPreferenceReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetUserPreference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.app.distribution.v1.Distribution/SetUserPreference',
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReq.SerializeToString,
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.SetUserPreferenceReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserPreference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.app.distribution.v1.Distribution/UserPreference',
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReq.SerializeToString,
            bilibili_dot_app_dot_distribution_dot_v1_dot_distribution__pb2.UserPreferenceReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
