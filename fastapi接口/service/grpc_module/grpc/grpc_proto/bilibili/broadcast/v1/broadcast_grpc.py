# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bilibili/broadcast/v1/broadcast.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import bilibili.rpc.status_pb2
import google.protobuf.any_pb2
import google.protobuf.empty_pb2
import bilibili.broadcast.v1.broadcast_pb2


class BroadcastBase(abc.ABC):

    @abc.abstractmethod
    async def Auth(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.AuthReq, bilibili.broadcast.v1.broadcast_pb2.AuthResp]') -> None:
        pass

    @abc.abstractmethod
    async def Heartbeat(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.HeartbeatReq, bilibili.broadcast.v1.broadcast_pb2.HeartbeatResp]') -> None:
        pass

    @abc.abstractmethod
    async def Subscribe(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.TargetPath, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def Unsubscribe(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.TargetPath, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def MessageAck(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.MessageAckReq, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.broadcast.v1.Broadcast/Auth': grpclib.const.Handler(
                self.Auth,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.broadcast.v1.broadcast_pb2.AuthReq,
                bilibili.broadcast.v1.broadcast_pb2.AuthResp,
            ),
            '/bilibili.broadcast.v1.Broadcast/Heartbeat': grpclib.const.Handler(
                self.Heartbeat,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.broadcast.v1.broadcast_pb2.HeartbeatReq,
                bilibili.broadcast.v1.broadcast_pb2.HeartbeatResp,
            ),
            '/bilibili.broadcast.v1.Broadcast/Subscribe': grpclib.const.Handler(
                self.Subscribe,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.broadcast.v1.broadcast_pb2.TargetPath,
                google.protobuf.empty_pb2.Empty,
            ),
            '/bilibili.broadcast.v1.Broadcast/Unsubscribe': grpclib.const.Handler(
                self.Unsubscribe,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.broadcast.v1.broadcast_pb2.TargetPath,
                google.protobuf.empty_pb2.Empty,
            ),
            '/bilibili.broadcast.v1.Broadcast/MessageAck': grpclib.const.Handler(
                self.MessageAck,
                grpclib.const.Cardinality.UNARY_UNARY,
                bilibili.broadcast.v1.broadcast_pb2.MessageAckReq,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class BroadcastStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Auth = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.broadcast.v1.Broadcast/Auth',
            bilibili.broadcast.v1.broadcast_pb2.AuthReq,
            bilibili.broadcast.v1.broadcast_pb2.AuthResp,
        )
        self.Heartbeat = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.broadcast.v1.Broadcast/Heartbeat',
            bilibili.broadcast.v1.broadcast_pb2.HeartbeatReq,
            bilibili.broadcast.v1.broadcast_pb2.HeartbeatResp,
        )
        self.Subscribe = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.broadcast.v1.Broadcast/Subscribe',
            bilibili.broadcast.v1.broadcast_pb2.TargetPath,
            google.protobuf.empty_pb2.Empty,
        )
        self.Unsubscribe = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.broadcast.v1.Broadcast/Unsubscribe',
            bilibili.broadcast.v1.broadcast_pb2.TargetPath,
            google.protobuf.empty_pb2.Empty,
        )
        self.MessageAck = grpclib.client.UnaryUnaryMethod(
            channel,
            '/bilibili.broadcast.v1.Broadcast/MessageAck',
            bilibili.broadcast.v1.broadcast_pb2.MessageAckReq,
            google.protobuf.empty_pb2.Empty,
        )


class BroadcastTunnelBase(abc.ABC):

    @abc.abstractmethod
    async def CreateTunnel(self, stream: 'grpclib.server.Stream[bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame, bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/bilibili.broadcast.v1.BroadcastTunnel/CreateTunnel': grpclib.const.Handler(
                self.CreateTunnel,
                grpclib.const.Cardinality.STREAM_STREAM,
                bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame,
                bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame,
            ),
        }


class BroadcastTunnelStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateTunnel = grpclib.client.StreamStreamMethod(
            channel,
            '/bilibili.broadcast.v1.BroadcastTunnel/CreateTunnel',
            bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame,
            bilibili.broadcast.v1.broadcast_pb2.BroadcastFrame,
        )
